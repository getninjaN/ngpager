{"name":"Ngpager","tagline":"Pagination directive for your angular application","body":"# NgPager\r\n**ng-pager** is a pagination directive for your angular application. The directive is only dependent on AngularJs and has no dependencies on JQuery. By default you can use Bootstrap for the styling or use your own stylesheet.\r\n\r\n## Todo\r\n\r\n* Generate a Bootstrap derived stylesheet with only paging specific style elements.\r\n* Add a live demo\r\n\r\n## Demo\r\n\r\n[Demo](http://github.io/pontjho/ngpager/)\r\n\r\n## Installation\r\n\r\nGrab the latest [release](https://github.com/pontjho/ngpager) or use\r\nbower install --save ngpager\r\n\r\nAdd the `javascript` file:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"ngpager.min.js\"></script>\r\n```\r\n\r\nThen add `NgPager` to your module's dependencies:\r\n\r\n```javascript\r\nangular.module('app', ['NgPager'])\r\n```\r\n\r\n## Usage\r\n\r\n### Basic usage\r\n\r\n```html\r\n<div ng-pager current-page=\"{{currentPage}}\" total-pages=\"{{totalPages}}\" max-pages-to-display=\"{{maxPagesToDisplay}}\" page-changed=\"paged(pageNum)\"></div>\r\n```\r\nAdd the ng-pager directive to any div element and specify the current page, total pages and maximum pages to display. Also include a function to handle the page changed event in your controller. Note that the current page will only update when you update it in your model.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}